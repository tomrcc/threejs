---
interface Props {
  x_rotation: number;
  y_rotation: number;
  cube_color: string;
}

const block = Astro.props;
const xRotation = block.x_rotation;
const yRotation = block.y_rotation;
const cubeColor = block.cube_color;
---

<div class="absolute inset-0">
  <script
    is:inline
    type="module"
    defer
    define:vars={{ xRotation, yRotation, cubeColor }}
  >
    import * as THREE from "three";
    window.onload = () => {
      const scene = new THREE.Scene();
      const camera = new THREE.PerspectiveCamera(
        75,
        window.innerWidth / window.innerHeight,
        0.1,
        1000
      );

      const renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      renderer.setAnimationLoop(animate);
      document.body.appendChild(renderer.domElement);

      const geometry = new THREE.BoxGeometry(1, 1, 1);
      const material = new THREE.MeshBasicMaterial({ color: cubeColor });
      const cube = new THREE.Mesh(geometry, material);
      scene.add(cube);

      camera.position.z = 5;

      function animate() {
        cube.rotation.x += xRotation;
        cube.rotation.y += yRotation;

        renderer.render(scene, camera);
      }
    };
  </script>
</div>
