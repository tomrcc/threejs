---
interface Props {}

const block = Astro.props;
---

<div class="w-1/2 mx-auto">
  <script is:inline type="module" defer define:vars={{}}>
    import { Scene, WebGLRenderer, PerspectiveCamera } from "three";
    import { OrbitControls } from "three/addons/controls/OrbitControls.js";
    import { Starfield } from "./solar-system/starfield.js";

    const w = window.innerWidth / 2;
    const h = window.innerHeight / 2;

    const scene = new Scene();
    const camera = new PerspectiveCamera(75, w / h, 0.1, 100);
    const renderer = new WebGLRenderer({ antialias: true });
    const controls = new OrbitControls(camera, renderer.domElement);

    const starfield = new Starfield().getStarfield();
    scene.add(starfield);

    controls.minDistance = 10;
    controls.maxDistance = 60;
    camera.position.set(
      30 * Math.cos(Math.PI / 6),
      30 * Math.sin(Math.PI / 6),
      40
    );

    renderer.setSize(w, h);
    renderer.setPixelRatio(window.devicePixelRatio);
    document.body.appendChild(renderer.domElement);

    renderer.render(scene, camera);

    window.addEventListener("resize", () => {
      const w = window.innerWidth / 2;
      const h = window.innerHeight / 2;
      renderer.setSize(w, h);
      camera.aspect = w / h;
      camera.updateProjectionMatrix();
    });

    const animate = () => {
      requestAnimationFrame(animate);
      controls.update();
      renderer.render(scene, camera);
    };

    animate();
  </script>
</div>
